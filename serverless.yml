org: jackow11
app: order-tracker-api
service:
  name: order-tracker-api-v3

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  configuration:
    ORDERS_TABLE: orders
    MAIN_STAGE: dev 
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  environment: ${self:custom.configuration}
  stage: ${opt:stage, self:custom.configuration.MAIN_STAGE}
  iamRoleStatements:
   - Effect: "Allow"
     Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
     Resource:
      - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.configuration.ORDERS_TABLE}"
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
    

functions:
  api:
    handler: handler.api
    events:
          
      - http:
          path: v1/orders/{id}
          method: get
          cors: true
         
      - http:
          path: v1/orders
          method: get
          cors: true

      - http:
          path: v1/orders
          method: post
          cors: true

      - http:
          path: v1/orders/{id}
          method: put
          cors: true

      - http:
          path: v1/orders/{id}
          method: delete
          cors: true

resources:
  Resources:
    OrdersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.configuration.ORDERS_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
